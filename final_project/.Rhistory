ts.plot(z, ylab="Z(t)", main=(expression(AR(1)~~phi==0.5)))
abline(h=0)
# 그림 6-2
ts.plot(y, ylab="Z(t)", main=(expression(AR(1)~~phi==-0.5)))
abline(h=0)
# 그림 6-6
set.seed(12347)
z = arima.sim(n=100, list(order=c(0, 0, 1), ma=-0.6), rand.gen=rnorm)
y = arima.sim(n=100, list(order=c(0, 0, 1), ma=0.6), rand.gen=rnorm)
ts.plot(z, yalb="z", main=(expression(MA(1)~~theta==0.6)))
abline(h=0)
# 그림 6-7
ts.plot(y, yalb="z", main=(expression(MA(1)~~theta==-0.6)))
abline(h=0)
Q = matrix(c(30, -60, -60, 30),byrow=TRUE)
Q
Q = matrix(c(30, -60, -60, 30),byrow=TRUE, nrow=2)
Q
Q = matrix(c(30, -60, -60, 160),byrow=TRUE, nrow=2)
Q
Q %*% c(1, 1)
- Q %*% c(1, 1)
d = - Q %*% c(1, 1)
d.T
d.t
transpose(d)
d %*% d
d = - Q * c(1, 1)
d
d = - Q %*% c(1, 1)
d
t(d) %*% d
t(d) %*% d / t(d) %*% Q %*% d
d = - Q %*% c(0.835, 1.55)
t(d) %*% d / t(d) %*% Q %*% d
d
t(d) %*% d / t(d) %*% Q %*% d
d = - Q %*% c(1.165, 0.45)
d
t(d) %*% d / t(d) %*% Q %*% d
d = - Q %*% c(1.165, 0.45)
d
t(d) %*% d / t(d) %*% Q %*% d
t(d) %*% d / t(d) %*% Q %*% d
d = - Q %*% c(8.84, -21.91)
d
t(d) %*% d / t(d) %*% Q %*% d
d = - Q %*% c(0.2319, 0.0875)
d
t(d) %*% d / t(d) %*% Q %*% d
rm(list=ls())
setwd("~/Workspace/2022-Fall_TimeSeriesAnalysis/final_project/")
data = read.csv("weather_data.csv")
data
as.Date(data$time)
as.Date(data$time, format="%Y. %M")
as.Date(data$time, format="%Y %M")
data = read.csv("weather_data.csv")
as.Date(data$time, format="%Y.%M")
as.Date(data$time, format="%Y %M")
as.Date(data$time, format="%Y%M")
as.Date(data$time, format="%Y%M",tz="Korea")
as.Date(data$time, format="%Y%m")
data = read.csv("weather_data.csv")
as.Date(data$time, format="%Y%m")
as.Date(data$time)
data = read.csv("weather_data.csv")
seoul_df = data[data$region == 0]
jeju_df = data[data$region == 1]
segwipo_df = data[data$region == 2]
data$region == 0
data[data$region == 0]
seoul_df = data[data$region == 0, :]
jeju_df = data[data$region == 1, :]
segwipo_df = data[data$region == 2, :]
library(tidyverse)
seoul_df = data %>% filter(region == 0)
jeju_df = data %>% filter(region == 2)
segwipo_df = data %>% filter(region == 2)
jeju_df = data %>% filter(region == 1)
segwipo_df = data %>% filter(region == 2)
seoul_df = ts(seoul_df, frequency=12, start=c(1995,1))
seoul_df
seoul_df = data %>% filter(region == 0) %>% seelct(-c(region))
jeju_df = data %>% filter(region == 1) %>% seelct(-c(region))
segwipo_df = data %>% filter(region == 2) %>% seelct(-c(region))
seoul_df = ts(seoul_df, frequency=12, start=c(1995,1))
seoul_df = data %>% filter(region == 0) %>% select(-c(region))
jeju_df = data %>% filter(region == 1) %>% select(-c(region))
segwipo_df = data %>% filter(region == 2) %>% select(-c(region))
seoul_df = ts(seoul_df, frequency=12, start=c(1995,1))
jeju_df = ts(jeju_df, frequency=12, start=c(1995,1))
segwipo_df = ts(segwipo_df, frequency=12, start=c(1995,1))
ts.plot(seoul_df)
ts.plot(seoul_df$temp_mean)
View(jeju_df)
ts.plot(seoul_df[:, 1])
data = read.csv("weather_data.csv")
seoul_df = data %>% filter(region == 0) %>% select(-c(region))
jeju_df = data %>% filter(region == 1) %>% select(-c(region))
segwipo_df = data %>% filter(region == 2) %>% select(-c(region))
ts.plot(seoul_df$temp_mean)
?ts.plot
ts.plot(seoul_df$temp_mean, frequency=12, start=c(1995, 1))
seoul_temp_mean = ts(seoul_df$temp_mean, start=c(1995, 1), frequency=12)
seoul_temp_mean
ts.plot(seoul_temp_mean)
ts.plot(diff(seoul_temp_mean, lag=12))
library(astsa)
acf2(diff(seoul_temp_mean, lag=12))
seogiwpo_temp_mean = ts(segwipo_df$temp_mean, start=c(1995, 1), frequency=12)
ts.plot(seogiwpo_temp_mean)
acf2(diff(seogiwpo_temp_mean, lag=12))
seoul_temp_mean_high = ts(seoul_df$temp_mean_high, start=c(1995, 1), frequency=12)
ts.plot(seoul_temp_mean_high)
ts.plot(diff(seoul_temp_mean_high, lag=12))
acf2(diff(seoul_temp_mean_high, lag=12))
seogwipo_temp_mean_high = ts(seogwipo_df$temp_mean_high, start=c(1995, 1), frequency=12)
rm(list=ls())
setwd("~/Workspace/2022-Fall_TimeSeriesAnalysis/final_project/")
par(family="AppleGothic")
library(astsa)
library(tidyverse)
data = read.csv("weather_data.csv")
seoul_df = data %>% filter(region == 0) %>% select(-c(region))
jeju_df = data %>% filter(region == 1) %>% select(-c(region))
seogwipo_df = data %>% filter(region == 2) %>% select(-c(region))
seoul_temp_mean = ts(seoul_df$temp_mean, start=c(1995, 1), frequency=12)
ts.plot(seoul_temp_mean)
ts.plot(diff(seoul_temp_mean, lag=12))
acf2(diff(seoul_temp_mean, lag=12))
seogwipo_temp_mean = ts(seogwipo_df$temp_mean, start=c(1995, 1), frequency=12)
ts.plot(seogwipo_temp_mean)
acf2(diff(seogwipo_temp_mean, lag=12))
seoul_temp_mean_high = ts(seoul_df$temp_mean_high, start=c(1995, 1), frequency=12)
ts.plot(seoul_temp_mean_high)
ts.plot(diff(seoul_temp_mean_high, lag=12))
acf2(diff(seoul_temp_mean_high, lag=12))
seogwipo_temp_mean_high = ts(seogwipo_df$temp_mean_high, start=c(1995, 1), frequency=12)
ts.plot(seogwipo_temp_mean_high)
seogwipo_temp_mean_low = ts(seogwipo_df$temp_mean_low, start=c(1995, 1), frequency=12)
ts.plot(seogwipo_temp_mean_low)
ts.plot(diff(seogwipo_temp_mean_low, lag=12))
acf2(diff(seogwipo_temp_mean_low, lag=12))
a = ts(seogwipo_df$humidity, start=c(1995, 1), frequency=12)
ts.plot(a)
ts.plot(diff(a, lag=12))
acf2(diff(a, lag=12))
b = ts(seoul_df$humidity, start=c(1995, 1), frequency=12)
ts.plot(b)
ts.plot(diff(b, lag=12))
acf2(diff(b, lag=12))
a = ts(seogwipo_df$precipitation, start=c(1995, 1), frequency=12)
ts.plot(a)
ts.plot(diff(a, lag=12))
ts.plot(diff(a, lag=12))
acf2(diff(a, lag=12))
b = ts(seoul_df$precipitation, start=c(1995, 1), frequency=12)
ts.plot(b)
View(data)
isna(df)
is.na(df)
is.na(data$precipitation)
sum(is.na(data$precipitation))
acf2(b)
data$precipitation == 0
sum(data$precipitation == 0)
# 기온 그래프
seoul_temp_mean = ts(seoul_df$temp_mean, start=c(1995, 1), frequency=12)
ts.plot(seoul_temp_mean)
seo_temp_mean = ts(seogwipo_df$temp_mean, start=c(1995, 1), frequency=12)
ts.plot(seo_temp_mean)
ts.plot(seoul_temp_mean, seo_temp_mean,
gpars=list(col=c("black", "blue")))
ts.plot(seoul_temp_mean, seo_temp_mean,
gpars=list(col=rainbow(2)))
legend("bottomright", legend=1:2, col=1:2, lty=1)
ts.plot(seoul_temp_mean, seo_temp_mean,
gpars=list(col=rainbow("black", "red")))
legend("bottomright", legend=1:2, col=1:2, lty=1)
# 기온 그래프
seoul_temp_mean = ts(seoul_df$temp_mean, start=c(1995, 1), frequency=12)
seo_temp_mean = ts(seogwipo_df$temp_mean, start=c(1995, 1), frequency=12)
ts.plot(seoul_temp_mean, seo_temp_mean,
gpars=list(col=rainbow("black", "red")))
ts.plot(seoul_temp_mean, seo_temp_mean,
gpars=list(col=c("black", "red")))
legend("bottomright", legend=1:2, col=1:2, lty=1)
ts.plot(seoul_temp_mean, seo_temp_mean,
main="서울과 제주의 평균 기온 시계열 그림"
gpars=list(col=c("black", "red")))
legend("bottomright", legend=c("서울", "제주"), col=1:2, lty=1)
ts.plot(seoul_temp_mean, seo_temp_mean,
main="서울과 제주의 평균 기온 시계열 그림",
gpars=list(col=c("black", "red")))
legend("bottomright", legend=c("서울", "제주"), col=1:2, lty=1)
par(family="AppleGothic")
legend("bottomright", legend=c("서울", "제주"), col=1:2, lty=1)
ts.plot(seoul_temp_mean, seo_temp_mean,
main="서울과 제주의 평균 기온 시계열 그림",
gpars=list(col=c("black", "red")))
legend("bottomright", legend=c("서울", "제주"), col=1:2, lty=1)
mean(seoul_temp_mean)
mean(seoul_temp_mean), std(seoul_temp_mean)
std(seoul_temp_mean)
sd(seoul_temp_mean)
mean(seoul_temp_mean); sd(seoul_temp_mean)
mean(seoul_temp_mean); sd(seoul_temp_mean)
mean(seo_temp_mean); sd(seo_temp_mean)
corr(seoul_temp_mean, seo_temp_mean)
corrcoef(seoul_temp_mean, seo_temp_mean)
cor(seoul_temp_mean, seo_temp_mean)
cor(seoul_df$temp_mean, seogwipo_df$temp_mean)
seoul_df$temp_mean
seogwipo_df$temp_mean
rm(list=ls())
setwd("~/Workspace/2022-Fall_TimeSeriesAnalysis/final_project/")
par(family="AppleGothic")
library(astsa)
library(tidyverse)
data = read.csv("weather_data.csv")
seoul_df = data %>% filter(region == 0) %>% select(-c(region))
jeju_df = data %>% filter(region == 1) %>% select(-c(region))
seogwipo_df = data %>% filter(region == 2) %>% select(-c(region))
# 기온 그래프
seoul_temp_mean = ts(seoul_df$temp_mean, start=c(1995, 1), frequency=12)
seo_temp_mean = ts(seogwipo_df$temp_mean, start=c(1995, 1), frequency=12)
ts.plot(seoul_temp_mean, seo_temp_mean,
main="서울과 제주의 평균 기온 시계열 그림",
gpars=list(col=c("black", "red")))
seoul_df = seoul_df[1:312]
seoul_df = seoul_df[1:312, :]
seoul_df = seoul_df[c(1:312), :]
data = read.csv("weather_data.csv")
seoul_df = data %>% filter(region == 0) %>% select(-c(region))
jeju_df = data %>% filter(region == 1) %>% select(-c(region))
seogwipo_df = data %>% filter(region == 2) %>% select(-c(region))
# 기온 그래프
seoul_temp_mean = ts(seoul_df$temp_mean, start=c(1995, 1), frequency=12)
seo_temp_mean = ts(seogwipo_df$temp_mean, start=c(1995, 1), frequency=12)
ts.plot(seoul_temp_mean, seo_temp_mean,
main="서울과 제주의 평균 기온 시계열 그림",
gpars=list(col=c("black", "red")))
legend("bottomright", legend=c("서울", "제주"), col=1:2, lty=1)
mean(seoul_temp_mean); sd(seoul_temp_mean)
mean(seo_temp_mean); sd(seo_temp_mean)
cor(seoul_df$temp_mean, seogwipo_df$temp_mean)
diff_12_seoul_temp = diff(seoul_temp_mean, lag=12)
diff_12_seo_temp = diff(seo_temp_mean, lag=12)
ts.plot(diff_12_seoul_temp, diff_12_seo_temp,
main="서울과 제주의 평균 기온 계절 차분 후 시계열 그림",
gpars=list(col=c("black", "red")))
legend("bottomright", legend=c("서울", "제주"), col=1:2, lty=1)
library(tseries)
library(tseries)
adf.test(diff_12_seoul_temp, k=0)
adf.test(diff_12_seo_temp, k=0)
acf2(diff_12_seoul_temp)
acf2(diff_12_seo_temp)
acf2(diff_12_seoul_temp, main="계절 차분된 서울 평균 기온")
acf2(diff_12_seo_temp, main="계절 차분된 제주 평균 기온")
arima(seoul_temp_mean, order=c(0,0,0), seasonal=c(0, 1, 1), period=12)
arima(seoul_temp_mean, order=c(0,0,0), seasonal=c(0, 1, 1), periods=12)
?arima
arima(seoul_temp_mean, order=c(0,0,0), seasonal=list(c(0, 1, 1), period=12))
arima(seoul_temp_mean, order=c(0,0,0),
seasonal=list(order=c(0, 1, 1), period=12))
seoul_model = arima(seoul_temp_mean, order=c(0,0,0),
seasonal=list(order=c(0, 1, 1), period=12))
seoul_model.resid
resid(seoul_model)
ts.plot(resid(seoul_model), main="서울 평균 기온의 잔차")
seo_model = arima(seo_temp_mean, order=c(0,0,0),
seasonal=list(order=c(0, 1, 1), period=12))
ts.plot(resid(seo_model), main="서귀포 평균 기온의 잔차")
Box.test(seoul_model_resid, lag=24)
seoul_model_resid = resid(seoul_model)
ts.plot(seoul_model_resid, main="서울 평균 기온의 잔차")
Box.test(seoul_model_resid, lag=24)
Box.test(seoul_model_resid, lag=6)
acf2(seoul_model_resid)
Box.test(seoul_model_resid, lag=6)
Box.test(seoul_model_resid, lag=12)
Box.test(seoul_model_resid, lag=24)
acf2(seoul_model_resid)
seoul_model_2 = arima(seoul_temp_mean, order=c(0,0,0),
seasonal=list(order=c(1, 1, 1), period=12))
seoul_model_2_resid = resid(seoul_model_2)
ts.plot(seoul_model_2_resid, main="서울 평균 기온의 잔차")
acf2(seoul_model_2_resid)
seoul_model_2 = arima(seoul_temp_mean, order=c(1, 0, 0),
seasonal=list(order=c(0, 1, 1), period=12))
seoul_model_2_resid = resid(seoul_model_2)
ts.plot(seoul_model_2_resid, main="서울 평균 기온의 잔차")
acf2(seoul_model_2_resid)
Box.test(seoul_model_2_resid, lag=6)
Box.test(seoul_model_2_resid, lag=12)
Box.test(seoul_model_2_resid, lag=24)
seo_model_2 = arima(seo_temp_mean, order=c(1, 0, 0),
seasonal=list(order=c(0, 1, 1), period=12))
seo_model_2_resid = resid(seo_model_2)
ts.plot(seo_model_2_resid, main="서귀포 평균 기온의 잔차")
Box.test(seo_model_2_resid, lag=6)
Box.test(seo_model_2_resid, lag=12)
Box.test(seo_model_2_resid, lag=24)
acf2(seo_model_2_resid)
seo_model_2 = arima(seo_temp_mean, order=c(2, 0, 0),
seasonal=list(order=c(0, 1, 1), period=12))
seo_model_2_resid = resid(seo_model_2)
ts.plot(seo_model_2_resid, main="서귀포 평균 기온의 잔차")
Box.test(seo_model_2_resid, lag=6)
Box.test(seo_model_2_resid, lag=12)
Box.test(seo_model_2_resid, lag=24)
acf2(seo_model_2_resid)
seoul_model = arima(seoul_temp_mean, order=c(2, 0, 0),
seasonal=list(order=c(0, 1, 1), period=12))
seoul_model_resid = resid(seoul_model)
ts.plot(seoul_model_resid, main="서울 평균 기온의 잔차")
Box.test(seoul_model_resid, lag=6)
Box.test(seoul_model_resid, lag=12)
Box.test(seoul_model_resid, lag=24)
acf2(seoul_model_resid)
seo_model_2 = arima(seo_temp_mean, order=c(2, 0, 0),
seasonal=list(order=c(0, 1, 1), period=12))
seo_model_2_resid = resid(seo_model_2)
ts.plot(seo_model_2_resid, main="서귀포 평균 기온의 잔차")
Box.test(seo_model_2_resid, lag=6)
Box.test(seo_model_2_resid, lag=12)
Box.test(seo_model_2_resid, lag=24)
acf2(seo_model_2_resid)
predict(seoul_model_2, newxreg=seoul_df, n.ahead=24)
predict(seoul_model_2, newxreg=seoul_df$temp_mean, n.ahead=24)
seo_model_2
autoplot(forecast(seoul_model_2))
forecast(seoul_model_2, h=36)
forecast(seoul_model_2, h=36)
install.packages("forecast")
library(forecast)
forecast(seoul_model_2, h=36)
autoplot(forecast(forecast(seoul_model_2, h=36)))
autoplot(forecast(forecast(seoul_model_2, h=60))) %>%
ggtitle("서울의 평균 기온 예측")
autoplot(forecast(forecast(seoul_model_2, h=60))) +
labs(x="시간", y="평균 기온", title="서울의 평균 기온 예측")
par(family="AppleGothic")
autoplot(forecast(forecast(seoul_model_2, h=60))) +
labs(x="시간", y="평균 기온", title="서울의 평균 기온 예측")
autoplot(forecast(forecast(seoul_model_2, h=60))) +
labs(x="시간", y="평균 기온", title="서울의 평균 기온 예측", family="AppleGothic")
autoplot(forecast(forecast(seoul_model_2, h=60))) +
labs(x="Time", y="평균 기온", title="서울의 평균 기온 예측") +
theme(axis.text.y=element_text(family="AppleGothic"))
autoplot(forecast(forecast(seoul_model_2, h=60))) +
labs(x="Time", y="평균 기온", title="서울의 평균 기온 예측") +
theme(axis.title.y=element_text(family="AppleGothic"))
autoplot(forecast(forecast(seoul_model_2, h=60))) +
labs(x="Time", y="평균 기온", title="서울의 평균 기온 예측") +
theme(axis.title.y=element_text(family="AppleGothic"),
axis.title=element_text(family="AppleGothic"),)
autoplot(forecast(forecast(seoul_model_2, h=60))) +
labs(x="Time", y="평균 기온", title="서울의 평균 기온 예측") +
theme(axis.title.y=element_text(family="AppleGothic"),
axis.title=element_text(family="AppleGothic"),
axis.suptitle=element_text(family="AppleGothic"),
)
autoplot(forecast(forecast(seoul_model_2, h=60))) +
labs(x="Time", y="평균 기온", title="서울의 평균 기온 예측") +
theme(axis.title.y=element_text(family="AppleGothic"),
axis.title=element_text(family="AppleGothic"),
axis.subtitle=element_text(family="AppleGothic"),
)
autoplot(forecast(forecast(seoul_model_2, h=60))) +
labs(x="Time", y="평균 기온", title="서울의 평균 기온 예측") +
theme(axis.title.y=element_text(family="AppleGothic"),
plot.title=element_text(family="AppleGothic"),
plot.subtitle=element_text(family="AppleGothic"))
autoplot(forecast(seoul_model_2, h=60)) +
labs(x="Time", y="평균 기온", title="서울의 평균 기온 예측") +
theme(axis.title.y=element_text(family="AppleGothic"),
plot.title=element_text(family="AppleGothic"),
plot.subtitle=element_text(family="AppleGothic"))
autoplot(forecast(seo_model_2, h=60)) +
labs(x="Time", y="평균 기온", title="서울의 평균 기온 예측") +
theme(axis.title.y=element_text(family="AppleGothic"),
plot.title=element_text(family="AppleGothic"),
plot.subtitle=element_text(family="AppleGothic"))
autoplot(forecast(seo_model_2, h=60)) +
labs(x="Time", y="평균 기온", title="서귀포의 평균 기온 예측") +
theme(axis.title.y=element_text(family="AppleGothic"),
plot.title=element_text(family="AppleGothic"),
plot.subtitle=element_text(family="AppleGothic"))
seo_model_2
seoul_model_2 = arima(seoul_temp_mean, order=c(1, 0, 0),
seasonal=list(order=c(0, 1, 1), period=12))
seoul_model_2
seo_model_2
seoul_model_2 = arima(seoul_temp_mean, order=c(2, 0, 0),
seasonal=list(order=c(0, 1, 1), period=12))
seoul_model_2
seoul_model_2_resid = resid(seoul_model_2)
ts.plot(seoul_model_2_resid, main="서울 평균 기온의 잔차")
Box.test(seoul_model_2_resid, lag=6)
Box.test(seoul_model_2_resid, lag=12)
Box.test(seoul_model_2_resid, lag=24)
acf2(seoul_model_2_resid)
seoul_model_2
seo_model_2 = arima(seo_temp_mean, order=c(2, 0, 0),
seasonal=list(order=c(0, 1, 1), period=12))
seo_model_2_resid = resid(seo_model_2)
seo_model_2
seo_model_2 = arima(seo_temp_mean, order=c(1, 0, 0),
seasonal=list(order=c(0, 1, 1), period=12))
seo_model_2
seo_model_2_resid = resid(seo_model_2)
ts.plot(seo_model_2_resid, main="서귀포 평균 기온의 잔차")
seo_model_2 = arima(seo_temp_mean, order=c(0, 0, 0),
seasonal=list(order=c(1, 1, 1), period=12))
seo_model_2_resid = resid(seo_model_2)
ts.plot(seo_model_2_resid, main="서귀포 평균 기온의 잔차")
seo_model_2
seo_model_2 = arima(seo_temp_mean, order=c(1, 1, 0),
seasonal=list(order=c(0, 1, 1), period=12))
seo_model_2
seo_model_2_resid = resid(seo_model_2)
ts.plot(seo_model_2_resid, main="서귀포 평균 기온의 잔차")
Box.test(seo_model_2_resid, lag=6)
Box.test(seo_model_2_resid, lag=12)
Box.test(seo_model_2_resid, lag=24)
seo_model_2 = arima(seo_temp_mean, order=c(2, 0, 0),
seasonal=list(order=c(0, 1, 1), period=12))
seo_model_2_resid = resid(seo_model_2)
ts.plot(seo_model_2_resid, main="서귀포 평균 기온의 잔차")
Box.test(seo_model_2_resid, lag=6)
Box.test(seo_model_2_resid, lag=12)
Box.test(seo_model_2_resid, lag=24)
acf2(seo_model_2_resid)
seo_model_2
seoul_model_2
# 습도
seoul_hum_mean = ts(seoul_df$humidity, start=c(1995, 1), frequency=12)
seo_hum_mean = ts(seogwipo_df$humidity, start=c(1995, 1), frequency=12)
ts.plot(seoul_hum_mean, seo_hum_mean,
main="서울과 제주의 평균 상대 습도 시계열 그림",
gpars=list(col=c("black", "red")))
legend("bottomright", legend=c("서울", "제주"), col=1:2, lty=1)
ts.plot(seoul_temp_mean, seo_temp_mean,
main="서울과 제주의 평균 기온 시계열 그림",
gpars=list(col=c("black", "red")))
legend("bottomright", legend=c("서울", "서귀포"), col=1:2, lty=1)
ts.plot(seoul_hum_mean, seo_hum_mean,
main="서울과 제주의 평균 상대 습도 시계열 그림",
gpars=list(col=c("black", "red")))
legend("bottomright", legend=c("서울", "서귀포"), col=1:2, lty=1)
mean(seoul_hum_mean); sd(seoul_hum_mean)
mean(seo_hum_mean); sd(seo_hum_mean)
diff_12_seo_hum = diff(seo_hum_mean, lag=12)
acf2(diff_12_seo_hum, main="계절 차분된 제주 평균 습도")
ts.plot(diff_12_seo_hum)
abline(h=0)
acf2(diff_12_seo_hum, main="계절 차분된 제주 평균 습도")
seo_model = arima(seo_hum_mean, order=c(0, 0, 0),
seasonal=list(order=c(0, 1, 1), period=12))
seo_model_resid = resid(seo_model)
seo_model_resid = resid(seo_model)
ts.plot(seo_model_resid, main="서귀포 평균 습도의 잔차")
acf2(seo_model_resid)
seo_model_2 = arima(seo_hum_mean, order=c(0, 1, 0),
seasonal=list(order=c(0, 1, 1), period=12))
seo_model_2_resid = resid(seo_model_2)
ts.plot(seo_model_2_resid, main="서귀포 평균 습도의 잔차")
acf2(seo_model_2_resid)
seo_model_3 = arima(seo_hum_mean, order=c(0, 1, 1),
seasonal=list(order=c(0, 1, 1), period=12))
seo_model_3_resid = resid(seo_model_3)
ts.plot(seo_model_3_resid, main="서귀포 평균 습도의 잔차")
acf2(seo_model_2_resid)
seo_model_3 = arima(seo_hum_mean, order=c(1, 1, 1),
seasonal=list(order=c(0, 1, 1), period=12))
seo_model_3_resid = resid(seo_model_3)
ts.plot(seo_model_3_resid, main="서귀포 평균 습도의 잔차")
acf2(seo_model_2_resid)
seo_model_3 = arima(seo_hum_mean, order=c(0, 2, 1),
seasonal=list(order=c(0, 1, 1), period=12))
seo_model_3_resid = resid(seo_model_3)
ts.plot(seo_model_3_resid, main="서귀포 평균 습도의 잔차")
acf2(seo_model_2_resid)
seo_model_3 = arima(seo_hum_mean, order=c(0, 1, 2),
seasonal=list(order=c(0, 1, 1), period=12))
seo_model_3_resid = resid(seo_model_3)
ts.plot(seo_model_3_resid, main="서귀포 평균 습도의 잔차")
acf2(seo_model_2_resid)
acf2(seo_model_3_resid)
Box.test(seo_model_3_resid, lag=6)
Box.test(seo_model_3_resid, lag=12)
Box.test(seo_model_3_resid, lag=24)
seo_model_3
autoplot(forecast(seo_model_3, h=60)) +
labs(x="Time", y="평균 습도", title="서귀포의 평균 습도 예측") +
theme(axis.title.y=element_text(family="AppleGothic"),
plot.title=element_text(family="AppleGothic"),
plot.subtitle=element_text(family="AppleGothic"))
install.packages(tsouliers)
install.packages("tsoutliers")
library(tsoutliers)
outlier = tso(ts(seo_hum_mean), types=c("AO", "IO", "LS"),
tsmethod="arima", cval=3.0,
args.tsmethod=list(order=c(0, 1, 1), seasonal=list(order=c(0, 1, 1), period=12)))
outlier
View(seogwipo_df)
279 / 12
12 * 23
12 * 9
