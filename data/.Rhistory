z = arima.sim(n=100, model=list(order=c(1, 0, 0), ar=0.5), rand.gen=rnorm)
y = arima.sim(n=100, model=list(order=c(1, 0, 0), ar=-0.5), rand.gen=rnorm)
ts.plot(z, ylab="Z(t)", main=(expression(AR(1)~~phi==0.5)))
abline(h=0)
abline(h=0)
# 그림 6-2
ts.plot(y, ylab="Z(t)", main=(expression(AR(1)~~phi==-0.5)))
abline(h=0)
# 그림 6-6
ts.plot(z, yalb="z", main=(expression(MA(1)~~theta==-0.6)))
abline(h=0)
# 그림 6-6
set.seed(12347)
ts.plot(z, yalb="z", main=(expression(MA(1)~~theta==-0.6)))
abline(h=0)
z = arima.sim(n=100, list(order=c(0, 0, 1), ma=-0.6), rand.gen=rnorm)
ts.plot(z, yalb="z", main=(expression(MA(1)~~theta==-0.6)))
abline(h=0)
y = arima.sim(n=100, list(order=c(0, 0, 1), ma=0.6), rand.gen=rnorm)
# 그림 6-6
set.seed(12347)
z = arima.sim(n=100, list(order=c(0, 0, 1), ma=-0.6), rand.gen=rnorm)
y = arima.sim(n=100, list(order=c(0, 0, 1), ma=0.6), rand.gen=rnorm)
ts.plot(z, yalb="z", main=(expression(MA(1)~~theta==0.6)))
abline(h=0)
# 그림 6-7
ts.plot(y, yalb="z", main=(expression(MA(1)~~theta==-0.6)))
abline(h=0)
rm(list=ls())
library(astsa)
set.seed(1234)
z = arima.sim(n=100, model=list(order=c(1, 0, 0), ar=0.5), rand.gen=rnorm)
y = arima.sim(n=100, model=list(order=c(1, 0, 0), ar=-0.5), rand.gen=rnorm)
# 그림 6-1
ts.plot(z, ylab="Z(t)", main=(expression(AR(1)~~phi==0.5)))
abline(h=0)
# 그림 6-2
ts.plot(y, ylab="Z(t)", main=(expression(AR(1)~~phi==-0.5)))
abline(h=0)
# 그림 6-6
set.seed(12347)
z = arima.sim(n=100, list(order=c(0, 0, 1), ma=-0.6), rand.gen=rnorm)
y = arima.sim(n=100, list(order=c(0, 0, 1), ma=0.6), rand.gen=rnorm)
ts.plot(z, yalb="z", main=(expression(MA(1)~~theta==0.6)))
abline(h=0)
# 그림 6-7
ts.plot(y, yalb="z", main=(expression(MA(1)~~theta==-0.6)))
abline(h=0)
rm(list=ls())
setwd("~/Workspace/2022-Fall_TimeSeriesAnalysis/data")
library(astsa)
library(portes)
library(lmtest)
gas = scan("gas.txt")
names(gas) = c("rate", "co2")
gasrate = data.frame(gas)
ts.plot(rate, ylab="gas rate", main="그림 8-1 가스 공급 비율")
time = 1:nrow(gas)
rate = ts(gas$rate)
co2 = ts(gas$co2)
ts.plot(rate, ylab="gas rate", main="그림 8-1 가스 공급 비율")
gas = scan("gas.txt")
names(gas) = c("rate", "co2")
gasrate = data.frame(gas)
time = 1:nrow(gas)
rate = ts(gas$rate)
co2 = ts(gas$co2)
ts.plot(rate, ylab="gas rate", main="그림 8-1 가스 공급 비율")
time = 1:nrow(gasrate)
rate = ts(gas$rate)
names(gas) = c("rate", "co2")
gas = data.frame(gas)
time = 1:nrow(gas)
rate = ts(gas$rate)
co2 = ts(gas$co2)
1:nrow(gas)
ts(gas$rate)
gas = scan("gas.txt")
names(gas) = c("rate", "co2")
gas
gas = scan("gas.txt")
gas = data.frame(gas)
names(gas) = c("rate", "co2")
View(gas)
gas = scan("gas.txt", what=list(0, 0))
gas = data.frame(gas)
names(gas) = c("rate", "co2")
time = 1:nrow(gas)
rate = ts(gas$rate)
co2 = ts(gas$co2)
ts.plot(rate, ylab="gas rate", main="그림 8-1 가스 공급 비율")
par(family="AppleGothic")
gas = scan("gas.txt", what=list(0, 0))
gas = data.frame(gas)
names(gas) = c("rate", "co2")
time = 1:nrow(gas)
rate = ts(gas$rate)
co2 = ts(gas$co2)
ts.plot(rate, ylab="gas rate", main="그림 8-1 가스 공급 비율")
acf2(rate, ylab="gas rate", main="그림 8-1 가스 공급 비율")
acf2(rate, max.lag=24, main="그림 8-1 가스 공급 비율")
fit1 = arima(rate, order=c(3, 0, 0), include.mean=FALSE)
summary(fit1)
ts.plot(resid(fit2), main="그림 8-3 잔차 시계열 그림")
abline(h=0)
fit1 = arima(rate, order=c(3, 0, 0))
summary(fit1)
fit2 = arima(rate, order=c(3, 0, 0), include.mean=FALSE)
summary(fit2)
ts.plot(resid(fit2), main="그림 8-3 잔차 시계열 그림")
abline(h=0)
ts.plot(resid(fit2), main="그림 8-3 잔차 시계열 그림")
abline(h=0)
par(family="AppleGothic")
ts.plot(resid(fit2), main="그림 8-3 잔차 시계열 그림")
abline(h=0)
coefest(fit1)
coeftest(fit1)
acf2(resid(fit2), max.lag=24, main="그림 8-4 잔차 SACF와 SPACF")
qqnorm(resid(fit2), main="그림 8-5 잔차의 정규성 검정")
qqline(resid(fit2), col="red")
LjungBox(fit2, lags=seq(6, 24, 6))
library(portes)
install.packages("protes")
install.packages("portes")
install.packages('portes')
Box.test(fit2, lag=6)
adfTest
# LjungBox(fit2, lags=seq(6, 24, 6))
sarima(rate, 3, 0, 0)
sarima.for(rate, 12, 3, 0, 0)
# LjungBox(z,ts, order=c(1, 0, 0))
fit = arima(a.tx, order=c(1, 0, 0))
summary(fit)
# 8.7
z = sacn("eg8_7.txt")
z.ts = ts(z)
ts.plot(z.ts, ylab="z", main="그림 8-6 모의 실험 자료")
acf2(z.ts, max.lag=24, main="그림 8-6 ACF & PACF")
# LjungBox(z,ts, order=c(1, 0, 0))
fit = arima(a.tx, order=c(1, 0, 0))
summary(fit)
# LjungBox(z,ts, order=c(1, 0, 0))
fit = arima(z.ts, order=c(1, 0, 0))
summary(fit)
# 8.7
z = sacn("eg8_7.txt")
# 8.7
z = scan("eg8_7.txt")
z.ts = ts(z)
ts.plot(z.ts, ylab="z", main="그림 8-6 모의 실험 자료")
acf2(z.ts, max.lag=24, main="그림 8-6 ACF & PACF")
# LjungBox(z,ts, order=c(1, 0, 0))
fit = arima(z.ts, order=c(1, 0, 0))
summary(fit)
coeftest(fit)
abline(h=0)
ts.plot(resid(fit), main="그림 8-7 잔차", ylab="residual")
abline(h=0)
acf2(resid(fit), maxlen=24, main="그림 8-8 잔차 SACF와 SPACF")
# LjungBox(z,ts, lag=seq(6, 24, 6))
sarima.fot(z.ts, 25, 1, 0, 0)
# LjungBox(z,ts, lag=seq(6, 24, 6))
sarima.for(z.ts, 25, 1, 0, 0)
sarima(z.ts, 2, 0, 0)
sarima(z.ts, 1, 0, 1)
# 8.8
z = scan("elecstock.txt")
stock = ts(z)
ts.plot(stock, ylab="stock", main="그림 8-10 주가 지수의 시계열 그림")
acf2(stock, max.lag=24, main="그림 8-10 주가 지수의 ACF & PACF")
install.packages("fUnitRoots")
# 8.8
library(fUnitRoot)
# 8.8
library(fUnitRoots)
# LjungBox(stock, lags=seq(6, 24, 6))
adfTest(stock, lags=0, type="c")
adfTest(stock, lags=1, type="c")
adfTest(stock, lags=2, type="c")
dstock = diff(stock, lag=1)
ts.plot(dstock, ylab="diff(stock)", main="그림 8-11 차분된 주가 지수")
abline(h=0)
acf2(dstock, maxlag=24)
# LjungBox(dstock, lags=seq(6, 24, 6))
fit = arima(stock, order=c(1, 0, 0), method="CSS")
fit
acf2(resid(fit))
fit1 = arima(stock, order=c(0, 1, 0))
summary(fit1)
acf2(resid(fit1))
acf2(resid(fit1))
# 8.9
library(ggplot2)
z = sacn("female.txt")
# LjungBox(female, lags=seq(6, 24, 6))
adfTest(female, lags=0, type="ct")
z = sacn("female.txt")
ts.plot(female, ylab="female", main="그림 8-9 여성 근로자")
z = sacn("female.txt")
female = ts(z)
ts.plot(female, ylab="female", main="그림 8-9 여성 근로자")
date = ymd("821201") + monthds(1:length(female) - 1)
install.packages("lubridate")
# 8.9
library(ggplot2)
library(lubridate)
z = sacn("female.txt")
female = ts(z)
ts.plot(female, ylab="female", main="그림 8-9 여성 근로자")
date = ymd("821201") + monthds(1:length(female) - 1)
date = ymd("821201") + monthes(1:length(female) - 1)
date = ymd("821201") + months(1:length(female) - 1)
female_df = data.frame(female, date)
acf2(female, max.lag=24, main="그림 8-9 여성 근로자의 ACF & PACF")
# LjungBox(female, lags=seq(6, 24, 6))
adfTest(female, lags=0, type="ct")
fit1 = lm(female ~ date, date=df)
coefficients(fit1)
residuals(fit1)
resdf = data.frame(date, residual)
resdf = data.frame(date, residual)
residual = residuals(fit1)
resdf = data.frame(date, residual)
ggplot(aes(x=date, y=residual), data=resdf) + geom_line()
dfemale = diff(female, lag=1)
ts.plot(dfemale, ylab="dff(female)", main="그림 8-10 차분된 여성 근로자")
abline(h=0)
acf2(dfemale, maxlag=24, main="그림 8-10 ACF & PACF")
fit2 = arima(female, order=c(0, 1, 0), method="ML")
fit2
library(astsa)
rm(list=ls())
library(astsa)
setwd("~/Workspace/2022-Fall_TimeSeriesAnalysis/data/")
# 10.5
library(astsa)
ltour = log(tour)
tour = scan("tourist.txt")
ts.plot(tour, ylab="tourist", main="그림 10-7 국내 입국 관광객 자료의 시계열 그림")
ltour = log(tour)
dl2tour = diff(ltour, lag=1)
d12tour = diff(ltour, lag=12)
ts.plot(d12tour)
ts.plot(d1tour, ylab="1st diff", main="그림 10-10 로그 변환과 1차 차분된 자료의 시계열 그림")
abline(h=0)
acf2(d12tour, ylab="seasonal diff", main="그림 10-9 SACF & SPACF")
acf2(d12tour, max.lag=36, main="그림 10-9 SACF & SPACF")
acf2(d1tour, max.lag=36, main="그림 10-10 SACF & SPACF")
d1tour = diff(ltour, lag=1)
ts.plot(d1tour, ylab="1st diff", main="그림 10-10 로그 변환과 1차 차분된 자료의 시계열 그림")
abline(h=0)
acf2(d1tour, max.lag=36, main="그림 10-10 SACF & SPACF")
d1_12tour = diff(d12tour)
d1_12tour = diff(d12tour)
ts.plot(d1_12tour, ylab="diff", main="그림 10-11 로그 변환과 계절 및 1차 차분된 자료의 시계열 그림")
abline(h=0)
acf2(d1_12tour, max.lag=36, main="그림 10-11 SACF & SPACF")
fit1 = arima(ltour, order=c(0, 1, 1), seasonal=list(order=c(0, 1, 1), period=12))
fit1
ts.plot(resid(fit1), main="그림 10-12 잔차의 시계열 그림")
abline(h=0)
acf2(resid(fit2), main="그림 10-13 RSACF & RSPACF")
acf2(resid(fit1), main="그림 10-13 RSACF & RSPACF")
Box.test(resid(fit1), lag=6, type="Ljung", fitdf=0)
fit2 = arima(ltour, order=c(0,1,1), seasonal=list(order=c(1,1,0), period=12))
fit2
abline(h=0)
ts.plot(resid(fit2), main="잔차의 시계열 그림")
abline(h=0)
acf2(resid(fit1), main="RSACF & RSPACF")
rm(list=ls())
setwd("~/Workspace/2022-Fall_TimeSeriesAnalysis/data/")
# 9.1
library(astsa)
z = scan("eg8_7.txt")
ts.plot(z, ylab="z", main="Simulated AR(1) process")
sarima.for(z, 25, 1, 0, 0)
# 9.5
z = scan("eg9_5.txt")
# 9.5
z = scan("eg9_5.txt")
ts.plot(z, ylab="z", main="그림 9-2 모의 실험 자료")
acf2(z, max.lag=24, main="그림 9-2 SACF & SPACF")
ts.plot(diff(z), main="그림 9-3 1차 차분된 모의 실험 자료")
abline(h=0)
fit = arima(z, order=c(0, 1, 1))
fit = arima(z, order=c(0, 1, 1))
ts.plot(resid(fit), main="그림 9-4 ARIMA(0, 1, 1) 적합 후의 잔차")
abline(h=0)
par(family="AppleGothic")
# 9.1
library(astsa)
z = scan("eg8_7.txt")
ts.plot(z, ylab="z", main="Simulated AR(1) process")
ts.plot(diff(z), main="그림 9-3 1차 차분된 모의 실험 자료")
abline(h=0)
par(mfrow=c(1,1))
ts.plot(z, ylab="z", main="그림 9-2 모의 실험 자료")
sarima.for(z, 25, 0, 1, 1)
rm(list=ls())
setwd("~/Workspace/2022-Fall_TimeSeriesAnalysis/data")
library(astsa)
library(portes)
library(lmtest)
par(family="AppleGothic")
# 8.6
gas = scan("gas.txt", what=list(0, 0))
gas = data.frame(gas)
names(gas) = c("rate", "co2")
time = 1:nrow(gas)
rate = ts(gas$rate)
co2 = ts(gas$co2)
par(mfrow=c(1,1))
ts.plot(rate, ylab="gas rate", main="그림 8-1 가스 공급 비율")
rm(list=ls())
setwd("~/Workspace/2022-Fall_TimeSeriesAnalysis/data")
library(astsa)
library(portes)
library(lmtest)
par(family="AppleGothic")
# 8.6
gas = scan("gas.txt", what=list(0, 0))
gas = data.frame(gas)
names(gas) = c("rate", "co2")
time = 1:nrow(gas)
rate = ts(gas$rate)
co2 = ts(gas$co2)
par(mfrow=c(1,1))
ts.plot(rate, ylab="gas rate", main="그림 8-1 가스 공급 비율")
acf2(rate, max.lag=24, main="그림 8-1 가스 공급 비율")
fit1 = arima(rate, order=c(3, 0, 0))
summary(fit1)
coeftest(fit1)
fit2 = arima(rate, order=c(3, 0, 0), include.mean=FALSE)
summary(fit2)
par(mfrow=c(1,1))
ts.plot(resid(fit2), main="그림 8-3 잔차 시계열 그림")
abline(h=0)
acf2(resid(fit2), max.lag=24, main="그림 8-4 잔차 SACF와 SPACF")
par(mfrow=c(1,1))
qqnorm(resid(fit2), main="그림 8-5 잔차의 정규성 검정")
qqline(resid(fit2), col="red")
# LjungBox(fit2, lags=seq(6, 24, 6))
sarima(rate, 3, 0, 0)
sarima.for(rate, 12, 3, 0, 0)
# LjungBox(fit2, lags=seq(6, 24, 6))
sarima(rate, 3, 0, 0)
sarima.for(rate, 12, 3, 0, 0)
# 8.7
z = scan("eg8_7.txt")
z.ts = ts(z)
par(mfrow=c(1,1))
ts.plot(z.ts, ylab="z", main="그림 8-6 모의 실험 자료")
acf2(z.ts, max.lag=24, main="그림 8-6 ACF & PACF")
# LjungBox(z,ts, order=c(1, 0, 0))
fit = arima(z.ts, order=c(1, 0, 0))
summary(fit)
coeftest(fit)
par(mfrow=c(1,1))
ts.plot(resid(fit), main="그림 8-7 잔차", ylab="residual")
abline(h=0)
acf2(resid(fit), maxlen=24, main="그림 8-8 잔차 SACF와 SPACF")
par(mfrow=c(1,1))
qqnorm(resid(fit), main="그림 8-9 잔차의 정규성 검정")
qqline(resid(fit), col="red")
# LjungBox(z,ts, lag=seq(6, 24, 6))
sarima.for(z.ts, 25, 1, 0, 0)
sarima(z.ts, 2, 0, 0)
sarima(z.ts, 1, 0, 1)
# 8.8
library(fUnitRoots)
z = scan("elecstock.txt")
stock = ts(z)
par(mfrow=c(1,1))
ts.plot(stock, ylab="stock", main="그림 8-10 주가 지수의 시계열 그림")
acf2(stock, max.lag=24, main="그림 8-10 주가 지수의 ACF & PACF")
# LjungBox(stock, lags=seq(6, 24, 6))
adfTest(stock, lags=0, type="c")
adfTest(stock, lags=1, type="c")
adfTest(stock, lags=2, type="c")
dstock = diff(stock, lag=1)
par(mfrow=c(1,1))
ts.plot(dstock, ylab="diff(stock)", main="그림 8-11 차분된 주가 지수")
abline(h=0)
acf2(dstock, maxlag=24)
fit = arima(stock, order=c(1, 0, 0), method="CSS")
fit
acf2(resid(fit))
fit1 = arima(stock, order=c(0, 1, 0))
summary(fit1)
acf2(resid(fit1))
# 8.9
library(ggplot2)
library(lubridate)
z = sacn("female.txt")
female = ts(z)
par(mfrow=c(1,1))
ts.plot(female, ylab="female", main="그림 8-9 여성 근로자")
date = ymd("821201") + months(1:length(female) - 1)
female_df = data.frame(female, date)
acf2(female, max.lag=24, main="그림 8-9 여성 근로자의 ACF & PACF")
fit1 = lm(female ~ date, date=df)
coefficients(fit1)
residual = residuals(fit1)
resdf = data.frame(date, residual)
par(mfrow=c(1,1))
ggplot(aes(x=date, y=residual), data=resdf) + geom_line()
dfemale = diff(female, lag=1)
par(mfrow=c(1,1))
ts.plot(dfemale, ylab="dff(female)", main="그림 8-10 차분된 여성 근로자")
abline(h=0)
z = scan("eg8_7.txt")
z.ts = ts(z)
par(mfrow=c(1,1))
ts.plot(z.ts, ylab="z", main="그림 8-6 모의 실험 자료")
acf2(z.ts, max.lag=24, main="그림 8-6 ACF & PACF")
# LjungBox(z,ts, order=c(1, 0, 0))
fit = arima(z.ts, order=c(1, 0, 0))
summary(fit)
coeftest(fit)
par(mfrow=c(1,1))
ts.plot(resid(fit), main="그림 8-7 잔차", ylab="residual")
abline(h=0)
acf2(resid(fit), maxlen=24, main="그림 8-8 잔차 SACF와 SPACF")
par(mfrow=c(1,1))
qqnorm(resid(fit), main="그림 8-9 잔차의 정규성 검정")
qqline(resid(fit), col="red")
z = sacn("female.txt")
female = ts(z)
par(mfrow=c(1,1))
ts.plot(female, ylab="female", main="그림 8-12 여성 근로자")
date = ymd("821201") + months(1:length(female) - 1)
female_df = data.frame(female, date)
acf2(female, max.lag=24, main="그림 8-12 여성 근로자의 ACF & PACF")
z = sacn("female.txt")
female = ts(z)
par(mfrow=c(1,1))
ts.plot(female, ylab="female", main="그림 8-12 여성 근로자")
date = ymd("821201") + months(1:length(female) - 1)
female_df = data.frame(female, date)
acf2(female, max.lag=24, main="그림 8-12 여성 근로자의 ACF & PACF")
fit1 = lm(female ~ date, date=df)
coefficients(fit1)
residual = residuals(fit1)
resdf = data.frame(date, residual)
par(mfrow=c(1,1))
ggplot(aes(x=date, y=residual), data=resdf) + geom_line()
dfemale = diff(female, lag=1)
par(mfrow=c(1,1))
ts.plot(dfemale, ylab="dff(female)", main="그림 8-13 차분된 여성 근로자")
abline(h=0)
acf2(dfemale, maxlag=24, main="그림 8-13 ACF & PACF")
rm(list=ls())
# 8.6
gas = scan("gas.txt", what=list(0, 0))
gas = data.frame(gas)
names(gas) = c("rate", "co2")
time = 1:nrow(gas)
rate = ts(gas$rate)
co2 = ts(gas$co2)
par(mfrow=c(1,1))
ts.plot(rate, ylab="gas rate", main="그림 8-1 가스 공급 비율")
acf2(rate, max.lag=24, main="그림 8-1 가스 공급 비율")
z = sacn("female.txt")
female = ts(z)
par(mfrow=c(1,1))
ts.plot(female, ylab="female", main="그림 8-12 여성 근로자")
z = sacn("female.txt")
z = scan("female.txt")
female = ts(z)
par(mfrow=c(1,1))
ts.plot(female, ylab="female", main="그림 8-12 여성 근로자")
date = ymd("821201") + months(1:length(female) - 1)
female_df = data.frame(female, date)
acf2(female, max.lag=24, main="그림 8-12 여성 근로자의 ACF & PACF")
fit1 = lm(female ~ date, date=df)
coefficients(fit1)
residual = residuals(fit1)
resdf = data.frame(date, residual)
par(mfrow=c(1,1))
ggplot(aes(x=date, y=residual), data=resdf) + geom_line()
dfemale = diff(female, lag=1)
par(mfrow=c(1,1))
ts.plot(dfemale, ylab="dff(female)", main="그림 8-13 차분된 여성 근로자")
abline(h=0)
acf2(dfemale, maxlag=24, main="그림 8-13 ACF & PACF")
fit2 = arima(female, order=c(0, 1, 0), method="ML")
fit2
rm(list=ls())
setwd("~/Workspace/2022-Fall_TimeSeriesAnalysis/data/")
par(family="AppleGothic")
# 9.1
library(astsa)
z = scan("eg8_7.txt")
par(mfrow=c(1,1))
ts.plot(z, ylab="z", main="Simulated AR(1) process")
acf2(z, max.lag=24, main="AR(1) 과정의 ACF & PACF")
sarima.for(z, 25, 1, 0, 0)
# 9.5
z = scan("eg9_5.txt")
par(mfrow=c(1,1))
ts.plot(z, ylab="z", main="그림 9-2 모의 실험 자료")
acf2(z, max.lag=24, main="그림 9-2 SACF & SPACF")
ts.plot(diff(z), main="그림 9-3 1차 차분된 모의 실험 자료")
abline(h=0)
acf2(diff(z), max.lag=24, main="그림 9-3 SACF & SPACF")
fit = arima(z, order=c(0, 1, 1))
par(mfrow=c(1,1))
ts.plot(resid(fit), main="그림 9-4 ARIMA(0, 1, 1) 적합 후의 잔차")
abline(h=0)
acf2(resid(fit), main="그림 9-4 잔차의 SACF & SPACF")
